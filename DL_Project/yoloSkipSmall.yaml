# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license

# Parameters
nc: 80 # number of classes
depth_multiple: 0.33 # model depth multiple
width_multiple: 0.25 # layer channel multiple
# 3 conv layers so we use 3 anchors
# Detects small, medium and large objects
# Each pair of two values specifies ratio of scales - 3 per anchor
anchors:
  - [3, 5, 7, 8, 10, 9]
  - [10, 13, 16, 30, 33, 23]
  - [30, 61, 62, 45, 59, 119]
  - [116, 90, 156, 198, 373, 326]

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  # From: which layers do we get input to this layer from (-1 denotes previous layer)
  # Number: number of times the module is repeated
  # Module name
  # Module arguments

  # Conv Block Arguments:   C_in, C_out, KernelSize = 1, stride = 1, padding = None
  # Has 3 Layers      --> Conv2d, BatchNorm, Activation (SiLU)

  # C3 Layer Arguments:     C_in, C_out, n (num_repeat) = 1, shortcut = True
  # Refer C3 block figure

  # SPPF Layer Arguments:   C_in, C_out, KernelSize = 5
  # See figure

  # Upsample Arguments:     Size, Scale_Factor, Mode

  # Concat Layer Arguments: Dimension = 1

  # Detect Layer Arguments: num_classes, out_channels,

  [
    [-1, 1, Conv, [64, 6, 2, 2]], # 0-P1/2
    [-1, 1, Conv, [128, 3, 2]], # 1-P2/4
    [-1, 3, C3, [128]], # 2
    [-1, 1, Conv, [256, 3, 2]], # 3-P3/8
    [-1, 6, C3, [256]], # 4
    [-1, 1, Conv, [512, 3, 2]], # 5-P4/16
    [-1, 9, C3, [512]], # 6
    [-1, 1, Conv, [1024, 3, 2]], # 7-P5/32
    [-1, 3, C3, [1024]], # 8
    [-1, 1, SPPF, [1024, 5]], # 9
  ]

# YOLOv5 v6.0 head
head: [
    [-1, 1, Conv, [512, 1, 1]], # 10
    [-1, 1, nn.Upsample, [None, 2, "nearest"]], # 11
    [[-1, 6], 1, Addition, [2]], # 12
    [[-1, 6], 1, Concat, [1]], # 13 cat backbone P4
    [-1, 3, C3, [512, False]], # 14

    [-1, 1, Conv, [256, 1, 1]], # 15
    [-1, 1, nn.Upsample, [None, 2, "nearest"]], # 16
    [[-1, 4], 1, Addition, [2]], # 17
    [[-1, 4], 1, Concat, [1]], # 18 cat backbone P3
    [-1, 3, C3, [256, False]], # 19 (P3/8-small)

    [-1, 1, Conv, [128, 1, 1]], # 20
    [-1, 1, nn.Upsample, [None, 2, "nearest"]], # 21
    [[-1, 2], 1, Addition, [2]], # 22
    [[-1, 2], 1, Concat, [1]], # 23 cat backbone P3
    [-1, 3, C3, [128, False]], # 24 (P3/8-small)

    [-1, 1, Conv, [128, 3, 2]], # 25
    [[-1, 20], 1, Addition, [2]], # 26
    [[-1, 20], 1, Concat, [1]], # 27 cat head P4
    [-1, 3, C3, [256, False]], # 28 (P4/16-medium)

    [-1, 1, Conv, [256, 3, 2]], # 29
    [[-1, 15], 1, Addition, [2]], # 30
    [[-1, 15], 1, Concat, [1]], # 31 cat head P4
    [-1, 3, C3, [512, False]], # 32 (P4/16-medium)

    [-1, 1, Conv, [512, 3, 2]], # 33
    [[-1, 10], 1, Addition, [2]], # 34
    [[-1, 10], 1, Concat, [1]], # 35 cat head P5
    [-1, 3, C3, [1024, False]], # 36 (P5/32-large)

    [[24, 28, 32, 36], 1, Detect, [nc]], # Detect(P3, P4, P5)
  ]
